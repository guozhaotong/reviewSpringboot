spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/test
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName =com.mysql.jdbc.Driver

name: Phil
########################################################
### Java PersistenceApi
########################################################
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for eachsql query
spring.jpa.show-sql = true
#Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto =update
#spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy  #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy =org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.hibernate.dialect= org.hibernate.dialect.MySQL5Dialect
########################################################
### druid
########################################################
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
########################################################
### Thymeleaf
########################################################
spring.thymeleaf.cache=false
#替换掉的HTML解析器
spring.thymeleaf.mode = LEGACYHTML5
########################################################
### 自定义属性
########################################################
tongtong.name=guozhaotong
tongtong.gender=female

tongtong.small.name[0]=tongtong1
tongtong.small.name[1]=tongtong2
tongtong.small.name[2]=tongtong3

tongtong.company.url=http://www.xjtu.edu.cn/

wisely2.name=wyf2
wisely2.gender=male2

com.example.demo.name= tongtong
com.example.demo.title=Spring Boot
com.example.demo.time=${random.int} 
com.example.demo.desc=${com.example.demo.name} is learning ${com.example.demo.title} for ${com.example.demo.time} seconds. 

########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
#spring.redis.password=
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
# name of Redis server
#spring.redis.sentinel.master=
# comma-separated list of host:portpairs
#spring.redis.sentinel.nodes=


#日志配置
#配置路径
logging.config=classpath:logback-spring.xml
#输出日志级别
logging.level.root=info

#使用CGLIB来实现AOP
spring.aop.proxy-target-class=true

########################################################
###mail setting
########################################################
spring.mail.host=smtp.qq.com
spring.mail.username=xjtuguozhaotong@qq.com
spring.mail.password=umhweunskjozbhbe
spring.mail.properties.mail.smtp.auth=true 
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.stattls.required=true